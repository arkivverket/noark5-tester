#!/usr/bin/env python
"""

Upload PDF to Noark 5 API for archiving.

"""

import sys
sys.path.append('lib')

import argparse
import json
import os
from pyPdf import PdfFileReader
import n5core.endpoint

def objectOperation(json, relation):
    """
Return the URL/href for a given relation on the object represented by
the json structure.

"""
    if '_links' not in json:
        return None
    for l in json['_links']:
        if l['rel'] == relation:
            return l['href']
    return None

def pickUnlessOne(json, type):
    """
Check the array in the json structure, if there is only one elemet, return it.
If there are more than one elemet, ask the user to pick one.
"""
    print("Found %d %s entries" % (len(json), type))
    count = len(json)
    if 0 == count:
        return None
    if 1 == count:
        print(json[0]['tittel'])
        return json[0]
    else:
        n = -1
        while -1 == n:
            i = 0
            for entry in json:
                print(" %d - %s" % (i, entry['tittel']))
                i = i + 1
            answer = raw_input("Select which %s you want (or search term): " % type)
            try:
                n = int(answer)
                if n < 0 or n >= count:
                    print("Invalid selection %d" % n)
                    n = -1
                else:
                    return json[int(n)]
            except Exception, e:
                # FIXME search instead
                pass

def createObject(api, url, data):
        (c, res) = api.json_post(url, data)
        fondinfo = json.loads(c)
        return fondinfo

def main():
    relver = 'http://rel.kxml.no/noark5/v4/api'
    relbase = relver + '/arkivstruktur'
    parser = argparse.ArgumentParser()
#        parser.add_argument("--reference", help="connect to demo API site",
#                            action="store_true")
    parser.add_argument("pdffile", nargs='+', help="PDF file to archive")
    args = parser.parse_args()
        
    baseurl = "http://localhost:8092/noark5v4/"
    api = n5core.endpoint.Endpoint(baseurl)
    api.verbose = True
    api.login()

    fondshref = api.findRelation(relbase + '/arkiv/')
    
    (c, res) = api.json_get(fondshref)
    fondsinfo = json.loads(c)
    info = pickUnlessOne(fondsinfo, 'arkiv')

    serieshref = objectOperation(info, relbase + '/arkivdel/')
    print("Arkivdel %s" % serieshref)
    (c, res) = api.json_get(serieshref)
    seriesinfo = json.loads(c)
    info = pickUnlessOne(seriesinfo, 'arkivdel')

    fileshref = objectOperation(info, relbase + '/mappe/')
    print("Mappe %s" % fileshref)
    (c, res) = api.json_get(fileshref)
    filesinfo = json.loads(c)
    info = pickUnlessOne(filesinfo, 'mappe')

    #
    # Correct file located, add record, document description and
    # document object for each file.
    #
    for pdfname in (args.pdffile):
        print(pdfname)
        pdffile = file(pdfname, "rb")

        pdffile.seek(0, os.SEEK_END)
        pdfsize = pdffile.tell()
        print "Size: ", pdfsize
        pdffile.seek(0, os.SEEK_SET)
        pdf = PdfFileReader(pdffile)
        newreghref = objectOperation(info, relbase + '/ny-registrering/')
        recordinfo = createObject(api, newreghref, { })

        newdocdeschref = objectOperation(recordinfo,
                                         relbase + '/ny-dokumentbeskrivelse/')
        docdescinfo = createObject(api, newdocdeschref, {
            "tittel" : pdf.getDocumentInfo().title,
        })

        newdocobjhref = objectOperation(docdescinfo,
                                        relbase + '/ny-dokumentobjekt/')
        docobjinfo = createObject(api, newdocobjhref, {
            "versjonsnummer" : 1,
            "variantformat"  : "Arkivformat",
            "format"         : "PDF",
            "mimeType"       : "application/pdf",
            "filstoerrelse"  : pdfsize,
        })

        #print(pdf.getDocumentInfo().producer)
        #print(pdf.getDocumentInfo().creator)
        #pdf.getDocumentInfo().creationdate ?

        newfilehref = objectOperation(docobjinfo, relbase + '/fil/')
        (c, res) = api.post(newfilehref, pdffile, 'application/pdf', length=pdfsize)
        if 200 == res.code:
            print("file upload ok (status == 200)")

if __name__ == '__main__':
    main()
